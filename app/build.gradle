apply plugin: 'com.android.application'

// In your app projects build.gradle file:
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.hong_world.myapp"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.version_code
        versionName build_versions.version_name

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"
//        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
//                includeCompileClasspath true
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }
    dataBinding {
        enabled = true
    }
    // 签名配置
    signingConfigs {
        release {
            try {
                storeFile file("./keystore/appRelease.jks")
                storePassword "123456"
                keyAlias "app"
                keyPassword "123456"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }

        debug {
            storeFile file("./keystore/debug.keystore")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
        debugOline {
            debuggable true
            matchingFallbacks = ['debug', 'qa', 'release']
        }

    }
    publishNonDefault true
    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {//单元测试
            applicationIdSuffix = ".mock"
        }
        prod {
            applicationIdSuffix = ".prod"
        }
        prod2 {
            applicationIdSuffix = ".prod2"
        }
    }
    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true)
        }
    }
}
//configurations {
//    mockapi
//    prodapi
//}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.support.app_compat
    implementation deps.constraint_layout
    testImplementation deps.junit
    testImplementation deps.mockito.all


    //    testImplementation 'org.hamcrest:hamcrest-all:1.3'

    //    androidTestImplementation 'com.android.support.test:runner:1.0.1'

    //    androidTestImplementation "com.android.support.test:rules:1.0.1"

    //    androidTestImplementation 'org.mockito:mockito-core:2.11.0'

    //    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'

    //    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'

    // Espresso UI Testing
    androidTestImplementation deps.espresso.core
    //androidTestImplementation "com.android.support.test.espresso:espresso-contrib:3.0.1"
    androidTestImplementation deps.espresso.intents
    implementation deps.espresso.idling_resource

    annotationProcessor deps.arouter.compiler
    if (deps.BIsLibarary)
        api project(':bmodle')
    if (deps.homeIsLibarary)
        api project(':homemodle')
    if (deps.kotlinModuleIsLibarary)
        api project(':kotlin-module')

//    mockapi project(path: ':bmodle', configuration: 'mockDebug')
//    mockapi project(path: ':bmodle', configuration: 'mockRelease')
//    prodapi project(path: ':bmodle', configuration: 'prodDebug')
//    prodapi project(path: ':bmodle', configuration: 'prodRelease')
//    prodapi project(path: ':homemodle', configuration: 'prodDebug')
//    prodapi project(path: ':homemodle', configuration: 'prodRelease')
//    mockapi project(path: ':homemodle', configuration: 'mockDebug')
//    mockapi project(path: ':homemodle', configuration: 'mockRelease')
}
